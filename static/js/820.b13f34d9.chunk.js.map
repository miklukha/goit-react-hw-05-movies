{"version":3,"file":"static/js/820.b13f34d9.chunk.js","mappings":"+SAKO,SAASA,EAAT,GAAgC,IAAVC,EAAS,EAATA,MAC3B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,6GAEsBC,EAAAA,gBAAoBL,GAF1C,OAESM,EAFT,OAGGH,EAAUG,EAAKC,SAHlB,gDAKGC,QAAQC,IAAR,MALH,yDAAD,yDAQC,CAACT,IAEJ,IAAMU,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,EAAAC,KAAD,UACGV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGI,KAFIC,U,6KCtBJH,E,QAAOO,EAAAA,GAAH,uE,oHCGV,SAASC,IACd,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMvB,EAAQsB,EAAaE,IAAI,SAgB/B,OACE,iCACE,kBAAMC,SAhBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACT7B,EAAQ4B,EAAKE,MAAMC,MAAMC,OAE1BhC,GAKLuB,EAAgB,CAAEvB,MAAAA,IAClB4B,EAAKK,SALHC,MAAM,eAUN,WACE,SAAC,EAAAC,MAAD,CAAOC,KAAK,OAAOC,aAAa,MAAMC,WAAS,EAACC,KAAK,WACrD,SAAC,EAAAC,OAAD,CAAQJ,KAAK,SAAb,uBAEDpC,IAAS,SAAC,EAAAD,WAAD,CAAYC,MAAOA,S,uHC3BtBmC,EAAQhB,EAAAA,EAAAA,MAAH,2GAQLqB,EAASrB,EAAAA,EAAAA,OAAH,+K,oRCHZ,SAAesB,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASrC,MAFX,kEAKA,SAAesC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5C,GAA/B,uFACkB0C,IAAAA,IAAA,8BAAiC1C,IADnD,cACC2C,EADD,yBAEEA,EAASrC,MAFX,kEAKA,SAAeuC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,uFACkB2B,IAAAA,IAAA,iBAAoB3B,IADtC,cACC4B,EADD,yBAEEA,EAASrC,MAFX,kEAKA,SAAewC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B/B,GAA/B,uFACkB2B,IAAAA,IAAA,iBAAoB3B,EAApB,aADlB,cACC4B,EADD,yBAEEA,EAASrC,MAFX,kEAKA,SAAeyC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,uFACkB2B,IAAAA,IAAA,iBAAoB3B,EAApB,aADlB,cACC4B,EADD,yBAEEA,EAASrC,MAFX,kEAzBPoC,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBM,QAAS","sources":["components/MoviesList/MoviesList.js","components/TrendingList/TrendingList.styled.js","pages/Movies/Movies.js","pages/Movies/Movies.styled.js","services/api.js"],"sourcesContent":["import { List } from 'components/TrendingList/TrendingList.styled';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport * as API from 'services/api';\n\nexport function MoviesList({ query }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async function getMovies() {\n      try {\n        const data = await API.getMovieByQuery(query);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [query]);\n\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 15px;\n  list-style: circle;\n`;\n","// import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Input, Button } from './Movies.styled';\nimport { MoviesList } from 'components/MoviesList';\n\nexport function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.input.value.trim();\n\n    if (!query) {\n      alert('Enter film');\n      return;\n    }\n\n    setSearchParams({ query });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" autoComplete=\"off\" autoFocus name=\"input\" />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      {query && <MoviesList query={query} />}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 70px;\n  height: 30px;\n  border-radius: 5px;\n  background-color: #dbd9d0;\n\n  &:hover,\n  &:focus {\n    background-color: #bfbebb;\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a9f392cbbc7836cc440c1eab3d6179cd',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["MoviesList","query","useState","movies","setMovies","useEffect","API","data","results","console","log","location","useLocation","List","map","original_title","id","to","state","from","styled","Movies","useSearchParams","searchParams","setSearchParams","get","onSubmit","e","preventDefault","form","target","input","value","trim","reset","alert","Input","type","autoComplete","autoFocus","name","Button","getTrendingMovies","axios","response","getMovieByQuery","getMovieDetails","getMovieCredits","getMovieReviews","api_key"],"sourceRoot":""}