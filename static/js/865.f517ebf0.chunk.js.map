{"version":3,"file":"static/js/865.f517ebf0.chunk.js","mappings":"mNAGaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAKzB,OACE,SAAC,KAAD,CAAMC,GAAID,EAAME,MAAO,CAAEC,KAAM,qBAA/B,uB,2KCDG,SAASC,IAAgB,IAAD,IACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YAER,mCAAC,8GAEuBC,EAAAA,EAAAA,IAAgBN,GAFvC,OAESG,EAFT,OAGGC,EAASD,GAHZ,gDAKGI,QAAQC,IAAR,MALH,yDAAD,yDAQC,CAACR,IAEJ,IAAQS,EAAgEN,EAAhEM,YAAaC,EAAmDP,EAAnDO,eAAgBC,EAAmCR,EAAnCQ,aAAcC,EAAqBT,EAArBS,SAAUC,EAAWV,EAAXU,OAYvDC,EAAY,qBADDC,EAAAA,EAAAA,MACalB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,iCACE,SAAC,EAAAJ,SAAD,CAAUC,KAAMmB,KAEhB,qBAASE,MAAO,CAAEC,aAAc,mBAAhC,WACE,gBACEC,IACET,EAvCI,kCAwCUA,EACV,sEAENU,IAAKT,KAEP,wBAAKA,KACL,yCACA,4BAAOU,KAAKC,MAAqB,GAAfV,GAAlB,QACA,qCACA,uBAAIC,KACJ,mCACA,0BA/BY,WAChB,GAAIC,EACF,OAAOA,EAAOS,QACZ,SAACC,EAAKC,GAAN,OAAgBD,EAAG,UAAMA,EAAM,KAAO,IAAnB,OAAwBC,EAAMC,QACjD,IA2BOC,SAGT,mDACA,gBAAIV,MAAO,CAAEC,aAAc,mBAA3B,WACE,yBACE,SAAC,KAAD,CAAMrB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,S,6SC9DC,SAAe+B,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,IAAAA,IAAA,8BAAiCI,IADnD,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B2B,GAA/B,uFACkBL,IAAAA,IAAA,iBAAoBK,IADtC,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBL,IAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACkBL,IAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAzBPF,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBQ,QAAS","sources":["components/BackLink/BackLink.js","components/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n// import { useLocation } from 'react-router-dom';\n\nexport const BackLink = ({ href }) => {\n  // const location = useLocation();\n  // console.log(location.state); // { from: \"/dashboard?name=hoodie\" }\n\n  // return <Link to={location.state.from}>Back to products</Link>;\n  return (\n    <Link to={href} state={{ from: '/movies?query=cat' }}>\n      Go Back\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { BackLink } from 'components/BackLink/BackLink';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => {\n    // loader and error (toastify)\n    (async function getMovie() {\n      try {\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  const { poster_path, original_title, vote_average, overview, genres } = movie;\n\n  const getGenres = () => {\n    if (genres) {\n      return genres.reduce(\n        (acc, genre) => acc + `${acc ? ', ' : ''}${genre.name}`,\n        ''\n      );\n    }\n  };\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <BackLink href={backLinkHref} />\n\n      <article style={{ borderBottom: '1px solid black' }}>\n        <img\n          src={\n            poster_path\n              ? IMG_URL + poster_path\n              : 'https://cloupyblob.blob.core.windows.net/cloupy/image-not-found.png'\n          }\n          alt={original_title}\n        />\n        <h2>{original_title}</h2>\n        <p>User score: </p>\n        <span>{Math.round(vote_average * 10)}%</span>\n        <p>Overview</p>\n        <p>{overview}</p>\n        <p>Genres</p>\n        <span>{getGenres()}</span>\n      </article>\n\n      <p>Additional Information</p>\n      <ul style={{ borderBottom: '1px solid black' }}>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a9f392cbbc7836cc440c1eab3d6179cd',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["BackLink","href","to","state","from","MovieDetails","movieId","useParams","useState","movie","setMovie","useEffect","getMovieDetails","console","log","poster_path","original_title","vote_average","overview","genres","backLinkHref","useLocation","style","borderBottom","src","alt","Math","round","reduce","acc","genre","name","getGenres","getTrendingMovies","axios","response","data","getMovieByQuery","query","id","getMovieCredits","getMovieReviews","api_key"],"sourceRoot":""}