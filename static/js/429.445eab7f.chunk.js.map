{"version":3,"file":"static/js/429.445eab7f.chunk.js","mappings":"6SAOO,SAASA,EAAT,GAAgC,IAAVC,EAAS,EAATA,MAC3B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,6GAEsBC,EAAAA,gBAAoBL,GAF1C,UAG+B,KADtBM,EAFT,QAGYC,QAAQC,OAHpB,uBAIKC,EAAAA,GAAAA,MAAY,aAJjB,0BAOGN,EAAUG,EAAKC,SAPlB,kDASGE,EAAAA,GAAAA,MAAY,mBACZC,QAAQC,IAAR,MAVH,0DAAD,yDAaC,CAACX,IAEJ,IAAMY,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,EAAAC,KAAD,UACGZ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGI,KAFIC,U,8EC7BJH,E,QAAOO,EAAAA,GAAH,uE,oRCKV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASlB,MAFX,kEAKA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,uFACkBuB,IAAAA,IAAA,8BAAiCvB,IADnD,cACCwB,EADD,yBAEEA,EAASlB,MAFX,kEAKA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BT,GAA/B,uFACkBM,IAAAA,IAAA,iBAAoBN,IADtC,cACCO,EADD,yBAEEA,EAASlB,MAFX,kEAKA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BV,GAA/B,uFACkBM,IAAAA,IAAA,iBAAoBN,EAApB,aADlB,cACCO,EADD,yBAEEA,EAASlB,MAFX,kEAKA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BX,GAA/B,uFACkBM,IAAAA,IAAA,iBAAoBN,EAApB,aADlB,cACCO,EADD,yBAEEA,EAASlB,MAFX,kEAzBPiB,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBM,QAAS","sources":["components/MoviesList/MoviesList.js","components/TrendingList/TrendingList.styled.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport * as API from 'services/api';\nimport { List } from 'components/TrendingList/TrendingList.styled';\n\nexport function MoviesList({ query }) {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async function getMovies() {\n      try {\n        const data = await API.getMovieByQuery(query);\n        if (data.results.length === 0) {\n          toast.error('Not found');\n          return;\n        }\n        setMovies(data.results);\n      } catch (error) {\n        toast.error('Something wrong');\n        console.log(error);\n      }\n    })();\n  }, [query]);\n\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ original_title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 15px;\n  list-style: circle;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a9f392cbbc7836cc440c1eab3d6179cd',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["MoviesList","query","useState","movies","setMovies","useEffect","API","data","results","length","toast","console","log","location","useLocation","List","map","original_title","id","to","state","from","styled","getTrendingMovies","axios","response","getMovieByQuery","getMovieDetails","getMovieCredits","getMovieReviews","api_key"],"sourceRoot":""}