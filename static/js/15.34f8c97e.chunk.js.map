{"version":3,"file":"static/js/15.34f8c97e.chunk.js","mappings":"yRAKO,SAASA,IACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YAER,mCAAC,8GAEyBC,EAAAA,EAAAA,iBAAgBN,GAFzC,OAESG,EAFT,OAGGC,EAAWD,EAAQI,SAHtB,gDAKGC,QAAQC,IAAR,MALH,yDAAD,yDAQC,CAACT,IAEsB,IAAnBG,EAAQO,QACb,sEAEA,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAAC,EAAAC,KAAD,YACE,SAAC,EAAAC,MAAD,wBACA,0BAAOJ,KACP,SAAC,EAAAK,KAAD,UAAOJ,MAHEC,U,gJCxBNE,EAAQE,EAAAA,EAAAA,KAAH,6CAILH,EAAOG,EAAAA,EAAAA,GAAH,qEAKJD,EAAOC,EAAAA,EAAAA,EAAH,8C,6WCJV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,IAAAA,IAAA,8BAAiCI,IADnD,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BX,GAA/B,uFACkBM,IAAAA,IAAA,iBAAoBN,IADtC,cACCO,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,uFACkBM,IAAAA,IAAA,iBAAoBN,EAApB,aADlB,cACCO,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BQ,GAA/B,uFACkBM,IAAAA,IAAA,iBAAoBN,EAApB,aADlB,cACCO,EADD,yBAEEA,EAASC,MAFX,kEAzBPF,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBO,QAAS","sources":["components/Reviews/Reviews.js","components/Reviews/Reviews.styled.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { Item, Label, Text } from './Reviews.styled';\n\nexport function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    // loader and error (toastify)\n    (async function getMovie() {\n      try {\n        const reviews = await getMovieReviews(movieId);\n        setReviews(reviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <p>We don't have any reviews for this movie.</p>\n  ) : (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <Item key={id}>\n          <Label>Author: </Label>\n          <span>{author}</span>\n          <Text>{content}</Text>\n        </Item>\n      ))}\n    </ul>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Label = styled.span`\n  font-weight: 500;\n`;\n\nexport const Item = styled.li`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 10px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a9f392cbbc7836cc440c1eab3d6179cd',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","results","console","log","length","map","author","content","id","Item","Label","Text","styled","getTrendingMovies","axios","response","data","getMovieByQuery","query","getMovieDetails","getMovieCredits","api_key"],"sourceRoot":""}