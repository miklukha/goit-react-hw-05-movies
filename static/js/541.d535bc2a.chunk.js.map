{"version":3,"file":"static/js/541.d535bc2a.chunk.js","mappings":"mRAOO,SAASA,IACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YAER,mCAAC,gHAEuBC,EAAAA,EAAAA,iBAAgBN,GAFvC,OAESO,EAFT,OAGSJ,EAAOI,EAAMJ,KACnBC,EAAQD,GAJX,gDAMGK,QAAQC,IAAR,MANH,yDAAD,yDASC,CAACT,KAGF,wBACGG,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,GAA3C,OACR,UAAC,EAAAC,KAAD,YACE,gBACEC,IACEL,EAzBE,kCA0BYA,EACV,sEAENM,IAAKL,KAEP,SAAC,EAAAM,MAAD,UAAQN,KACR,SAAC,EAAAO,MAAD,2BACA,0BAAON,MAXEC,U,kJCzBNI,EAAQE,EAAAA,EAAAA,GAAH,yFAMLD,EAAQC,EAAAA,EAAAA,KAAH,6CAILL,EAAOK,EAAAA,EAAAA,GAAH,sE,oRCLV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBJ,IAAAA,IAAA,8BAAiCI,IADnD,cACCH,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,uFACkBQ,IAAAA,IAAA,iBAAoBR,IADtC,cACCS,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BQ,GAA/B,uFACkBQ,IAAAA,IAAA,iBAAoBR,EAApB,aADlB,cACCS,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,uFACkBQ,IAAAA,IAAA,iBAAoBR,EAApB,aADlB,cACCS,EADD,yBAEEA,EAASC,MAFX,kEAzBPF,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBO,QAAS","sources":["components/Cast/Cast.js","components/Cast/Cast.styled.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport { Title, Item, Label } from './Cast.styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    // loader and error (toastify)\n    (async function getMovie() {\n      try {\n        const movie = await getMovieCredits(movieId);\n        const cast = movie.cast;\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map(({ profile_path, original_name, character, id }) => (\n        <Item key={id}>\n          <img\n            src={\n              profile_path\n                ? IMG_URL + profile_path\n                : 'https://cloupyblob.blob.core.windows.net/cloupy/image-not-found.png'\n            }\n            alt={original_name}\n          />\n          <Title>{original_name}</Title>\n          <Label>Character: </Label>\n          <span>{character}</span>\n        </Item>\n      ))}\n    </ul>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  font-size: 20px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.span`\n  font-weight: 500;\n`;\n\nexport const Item = styled.li`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'a9f392cbbc7836cc440c1eab3d6179cd',\n};\n\nexport async function getTrendingMovies() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","getMovieCredits","movie","console","log","map","profile_path","original_name","character","id","Item","src","alt","Title","Label","styled","getTrendingMovies","axios","response","data","getMovieByQuery","query","getMovieDetails","getMovieReviews","api_key"],"sourceRoot":""}